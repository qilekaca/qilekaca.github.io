const n=JSON.parse('{"key":"v-6ff85ba9","path":"/posts/texts/show_me_code.html","title":"show_me_code","lang":"zh-CN","frontmatter":{"title":"show_me_code","date":"2022-03-14T00:00:00.000Z","category":["面试"],"tag":["算法"],"description":"查找数组中重复出现的数 function getSameNum(arr) { let result = []; let arr = arr.sort((a, b) =&gt; a - b); for (let i = 0; i &lt; arr.length - 1; i++) { if (arr[i] == arr[i + 1]) { result.push(arr[i]); } } return Array.form(new Set(result)); }","head":[["meta",{"property":"og:url","content":"https://qilekaca.github.io/posts/texts/show_me_code.html"}],["meta",{"property":"og:site_name","content":"o_o"}],["meta",{"property":"og:title","content":"show_me_code"}],["meta",{"property":"og:description","content":"查找数组中重复出现的数 function getSameNum(arr) { let result = []; let arr = arr.sort((a, b) =&gt; a - b); for (let i = 0; i &lt; arr.length - 1; i++) { if (arr[i] == arr[i + 1]) { result.push(arr[i]); } } return Array.form(new Set(result)); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T14:55:47.000Z"}],["meta",{"property":"article:author","content":"ZhangWei"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2022-03-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T14:55:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"show_me_code\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-21T14:55:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZhangWei\\",\\"url\\":\\"https://github.com/qilekaca\\"}]}"]]},"headers":[{"level":2,"title":"查找数组中重复出现的数","slug":"查找数组中重复出现的数","link":"#查找数组中重复出现的数","children":[]},{"level":2,"title":"扁平化数组","slug":"扁平化数组","link":"#扁平化数组","children":[]},{"level":2,"title":"实现一个睡眠函数","slug":"实现一个睡眠函数","link":"#实现一个睡眠函数","children":[]}],"git":{"createdTime":1737471347000,"updatedTime":1737471347000,"contributors":[{"name":"张伟","email":"37145794+qilekaca@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"posts/texts/show_me_code.md","localizedDate":"2022年3月14日","excerpt":"<h2> 查找数组中重复出现的数</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getSameNum</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> result <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> a <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> arr<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      result<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> Array<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">form</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span>result<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
