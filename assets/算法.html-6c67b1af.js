const n=JSON.parse('{"key":"v-3a1a6531","path":"/posts/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/%E7%AE%97%E6%B3%95.html","title":"十大排序算法","lang":"zh-CN","frontmatter":{"title":"十大排序算法","date":"2020-04-01T00:00:00.000Z","category":["算法"],"tag":["排序算法"],"description":"十大排序算法 快速排序 const quickSort = function (arr) { if (arr.length &lt;= 1) return arr; let valueIndex = Math.floor(arr.length / 2); let value = arr.splice(valueIndex, 1)[0]; const left = []; const right = []; for (let i = 0; i &lt; arr.length; i++) { if (arr[i] &lt; value) { left.push(arr[i]); } else { right.push(arr[i]); } } return quickSort(left).concat([value], quickSort(right)); };","head":[["meta",{"property":"og:url","content":"https://qilekaca.github.io/posts/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"十大排序算法"}],["meta",{"property":"og:description","content":"十大排序算法 快速排序 const quickSort = function (arr) { if (arr.length &lt;= 1) return arr; let valueIndex = Math.floor(arr.length / 2); let value = arr.splice(valueIndex, 1)[0]; const left = []; const right = []; for (let i = 0; i &lt; arr.length; i++) { if (arr[i] &lt; value) { left.push(arr[i]); } else { right.push(arr[i]); } } return quickSort(left).concat([value], quickSort(right)); };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T03:40:38.000Z"}],["meta",{"property":"article:author","content":"ZhangWei"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2020-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-01T03:40:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"十大排序算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-01T03:40:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZhangWei\\",\\"url\\":\\"https://qilekaca.github.io\\"}]}"]]},"headers":[{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":2,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":2,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":2,"title":"希尔排序","slug":"希尔排序","link":"#希尔排序","children":[]},{"level":2,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]}],"git":{"createdTime":1680320438000,"updatedTime":1680320438000,"contributors":[{"name":"张伟","email":"37145794+qilekaca@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.7,"words":509},"filePathRelative":"posts/知识储备/算法.md","localizedDate":"2020年4月1日","excerpt":"<h1> 十大排序算法</h1>\\n<h2> 快速排序</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">quickSort</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> valueIndex <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> value <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">splice</span><span class=\\"token punctuation\\">(</span>valueIndex<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> left <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> right <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      left<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      right<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span>left<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">concat</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>value<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span>right<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
