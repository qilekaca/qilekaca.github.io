const e=JSON.parse('{"key":"v-7454f61c","path":"/posts/projects/Koa%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84todolist.html","title":"Koa实现简单的todolist","lang":"zh-CN","frontmatter":{"title":"Koa实现简单的todolist","date":"2020-06-27T00:00:00.000Z","category":["前端","全栈"],"tag":["Vue","Node","MySQL","Docker"],"description":"简介 已经使用 Vue 和云开发完成了好多内容，但是对于真实的前后端并没有实际的了解，所以希望通过一个简单的前后端分离的项目来理解。毫无疑问对于前端开发人员门槛最低的后端肯定是 Node。所以此项目前端使用 Vue 后端使用 Koa 来完成。要实现的功能也很简单，用户登录之后，可以进行 todo 的增删查改。后端数据库使用 MySQL。项目的结构基本就是在 Vue-cli 初始化的项目的根目录下创建一个 server 文件夹和 app.js 的项目入口文件。","head":[["meta",{"property":"og:url","content":"https://qilekaca.github.io/posts/projects/Koa%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84todolist.html"}],["meta",{"property":"og:site_name","content":"o_o"}],["meta",{"property":"og:title","content":"Koa实现简单的todolist"}],["meta",{"property":"og:description","content":"简介 已经使用 Vue 和云开发完成了好多内容，但是对于真实的前后端并没有实际的了解，所以希望通过一个简单的前后端分离的项目来理解。毫无疑问对于前端开发人员门槛最低的后端肯定是 Node。所以此项目前端使用 Vue 后端使用 Koa 来完成。要实现的功能也很简单，用户登录之后，可以进行 todo 的增删查改。后端数据库使用 MySQL。项目的结构基本就是在 Vue-cli 初始化的项目的根目录下创建一个 server 文件夹和 app.js 的项目入口文件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T14:55:47.000Z"}],["meta",{"property":"article:author","content":"ZhangWei"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:tag","content":"Node"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2020-06-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T14:55:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Koa实现简单的todolist\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-27T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-21T14:55:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZhangWei\\",\\"url\\":\\"https://github.com/qilekaca\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"开发步骤","slug":"开发步骤","link":"#开发步骤","children":[{"level":3,"title":"后端开发","slug":"后端开发","link":"#后端开发","children":[]},{"level":3,"title":"前端开发","slug":"前端开发","link":"#前端开发","children":[]},{"level":3,"title":"登陆功能","slug":"登陆功能","link":"#登陆功能","children":[]}]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"Nginx","slug":"nginx","link":"#nginx","children":[]}]}],"git":{"createdTime":1737471347000,"updatedTime":1737471347000,"contributors":[{"name":"张伟","email":"37145794+qilekaca@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.55,"words":1665},"filePathRelative":"posts/projects/Koa实现简单的todolist.md","localizedDate":"2020年6月27日","excerpt":"<h2> 简介</h2>\\n<p>已经使用 Vue 和云开发完成了好多内容，但是对于真实的前后端并没有实际的了解，所以希望通过一个简单的前后端分离的项目来理解。毫无疑问对于前端开发人员门槛最低的后端肯定是 Node。所以此项目前端使用 Vue 后端使用 Koa 来完成。要实现的功能也很简单，用户登录之后，可以进行 todo 的增删查改。后端数据库使用 MySQL。项目的结构基本就是在 Vue-cli 初始化的项目的根目录下创建一个 server 文件夹和 app.js 的项目入口文件。</p>\\n","autoDesc":true}');export{e as data};
