import{_ as e,W as p,X as o,a1 as a,Y as s,Z as n,$ as c,a0 as l,C as i}from"./framework-b5b224ca.js";const u={},r=s("h2",{id:"起因",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#起因","aria-hidden":"true"},"#"),n(" 起因")],-1),d=s("code",null,"vue + vant-ui",-1),k={href:"https://cloudbase.net",target:"_blank",rel:"noopener noreferrer"},v=l(`<h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ vue create webapp <span class="token comment"># 本项目需要使用 vuex 和 vue-router 所以要选择这两项</span>
$ <span class="token builtin class-name">cd</span> webapp
$ <span class="token function">yarn</span> <span class="token function">add</span> vant
$ <span class="token function">yarn</span> <span class="token function">add</span> babel-plugin-import <span class="token parameter variable">-D</span> <span class="token comment"># 这是一款babel插件，会自动按需引入插件</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置按需引入插件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在babel.config.js中配置</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;import&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">libraryName</span><span class="token operator">:</span> <span class="token string">&quot;vant&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">libraryDirectory</span><span class="token operator">:</span> <span class="token string">&quot;es&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string">&quot;vant&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>// 设置完成按需引入之后就可以在项目组件中按需引入插件了 // button.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vant&#39;</span>
<span class="token keyword">export</span> deafult<span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>Button<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token operator">:</span> Button
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决移动端的点击延迟引入 fastclick 库，<code>yarn add fastclick</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在main.js中添加</span>
<span class="token keyword">import</span> fastClick <span class="token keyword">from</span> <span class="token string">&quot;fastclick&quot;</span><span class="token punctuation">;</span>
fastClick<span class="token punctuation">.</span><span class="token function">attch</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加云开发的配置文件，在项目的根目录下创建 cloudbaserc.json 文件和 functions 文件夹。functions 文件夹用来存放项目需要用到的云函数。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;envId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span> <span class="token comment">// 填入自己的云开发环境的id</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用云开发还需要<code>@cloudbase/js-sdk</code> <code>yarn add @cloudbase/js-sdk</code>安装完成后在 main.js 中引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Cloudbase <span class="token keyword">from</span> <span class="token string">&quot;@cloudbase/js-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">&quot;./cloudbaserc.json&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> Cloudbase<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">env</span><span class="token operator">:</span> config<span class="token punctuation">.</span>envId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$app <span class="token operator">=</span> app<span class="token punctuation">;</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$auth <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">persistence</span><span class="token operator">:</span> <span class="token string">&quot;local&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用户的登录信息保存在localStorage当中</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 web 端云开发的限制，当用户没有登录的时候是无法访问云资源的，所以还需要为云函数添加 http 接入。所以项目还需要使用 axios 进行云接入以 http 请求的形式去调用云函数。<code>yarn add axios</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目分析" tabindex="-1"><a class="header-anchor" href="#项目分析" aria-hidden="true">#</a> 项目分析</h2><p>当用户未登录的时候可以查看广场页面的内容，可以查看内容的详细信息，但是不能够对内容进行点赞收藏评论等功能，未选择学校时不能够查看出租、转卖、失物等页面的内容，用户注册目前只能够通过邮箱进行注册。通过 vue-router 的路由拦截实现上述功能，使用 vuex 实现用户信息的保存，用户学校信息的保存、用户联系方式的保存。当用户完成登陆后先去云数据库获取用户的信息。获取完成信息后使用 vuex + loaclStorage 将用户数据保存到本地。</p><h2 id="项目难点" tabindex="-1"><a class="header-anchor" href="#项目难点" aria-hidden="true">#</a> 项目难点</h2><ol><li><p>对比小程序的云开发 web 版本的云开发的登录注册验证过程变的繁琐，小程序无需用户进行注册直接使用微信即可登录访问云资源，web 版本需要用户自行注册完成后方可访问云资源。</p></li><li><p>使用 mpvue 开发小程序不支持使用 vue-router，导致 vue-router 不熟练。开发过程中使用 history 模式的 vue-router 开发时一直没有问题，但是当项目部署到服务器后，进入页面后在刷新页面会导致页面 404。后改为 hash 模式。vue-router 的跳转拦截非常好用，当用户未登陆时只开放给用户 根目录 登录页面 和 详情页面，当用户在 url 框输入其他路径会直接跳转到登录界面。</p></li><li><p>使用 axios 进行云接入调用云函数，由于官方文档对使用方法未进行详细介绍，导致好多莫名奇妙的问题。最后试了好多次终于找到正确调用方法。</p></li><li><p>初期随着项目逐渐变大，发现项目的耦合度过高，出现一点问题要进行修改就会影响其他内容导致修改起来十分费力，无奈只能重新写一遍程序，导致开发时间变长。</p></li><li><p>由于未进行详细的测试项目可能出现问题，且项目打包后体积过大，导致首次访问加载时间过长。（目前考虑使用 nginx 开启 gzip 压缩）</p></li></ol>`,17);function m(b,g){const t=i("ExternalLinkIcon");return p(),o("div",null,[r,a(" > [项目地址](http://188.131.188.209/college) "),s("p",null,[n("因为没能发布小程序，所以打算写一个网页版的供大家使用。前端使用"),d,n("后端使用"),s("a",k,[n("腾讯云云开发"),c(t)]),n("，程序的主要功能为用户将自己闲置的物品发布到程序上，用户可以选择将物品出租或出售，并且发布的信息只会显示给同校的用户。并且还添加了校园失物、广场页面上的信息所有用户都可以看到。用户可以对商品进行评论、分享等功能。")]),a(" more "),v])}const y=e(u,[["render",m],["__file","Web版小程序.html.vue"]]);export{y as default};
