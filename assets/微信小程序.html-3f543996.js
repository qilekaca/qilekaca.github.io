import{_ as p,W as e,X as o,Y as s,Z as n,$ as t,a1 as c,a0 as i,C as l}from"./framework-b5b224ca.js";const u={},r=s("h2",{id:"前期准备",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前期准备","aria-hidden":"true"},"#"),n(" 前期准备")],-1),k={href:"https://github.com/Meituan-Dianping/mpvue",target:"_blank",rel:"noopener noreferrer"},d={href:"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 全局安装 vue-cli</span>
$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--global</span> vue-cli

<span class="token comment"># 创建一个基于 mpvue-quickstart 模板的新项目</span>
$ vue init mpvue/mpvue-quickstart my-project

<span class="token comment"># 安装依赖，走你</span>
$ <span class="token builtin class-name">cd</span> my-project
$ <span class="token function">npm</span> <span class="token function">install</span>
$ <span class="token function">npm</span> run dev

<span class="token comment"># 更新依赖</span>
$ <span class="token function">npm</span> i mpvue <span class="token parameter variable">-S</span>
$ <span class="token function">npm</span> i mpvue-template-compiler mpvue-loader mpvue-webpack-target postcss-mpvue-wxss webpack-dev-middleware-hard-disk -S-D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在小程序的开发者工具中开通云环境。开通云环境后在项目根目录创建一个 functions 文件夹用来保存项目需要使用到的云函数，配置项目的配置文件，修改 src 目录下的 app.json 文件添加<code>&quot;cloud&quot;: true</code>。修改项目的根目录下的 project.config.json 文件添加<code>&quot;cloudfunctionRoot&quot;: &quot;cloud_functions/&quot;</code>。项目中还需要使用 vuex，<code>yarn add vuex</code> 在 src 文件夹下创建一个 store 文件夹并添加 index.js mutations.js state.js 文件。这里的 vuex 需要配合 wx.getStorageSync 使用。项目的用户的个人信息和学校还有联系方式可以使用 vuex 进行保存。<code>iconfont</code>在 src 文件夹下创建 style 文件夹用来保存 iconfont 文件。</p><h2 id="页面" tabindex="-1"><a class="header-anchor" href="#页面" aria-hidden="true">#</a> 页面</h2><p>初步估计项目需要 9 个页面，<code>[home,my,post,posted,user,collect,college,detail,history]</code>,home 页面为用户访问的主页，显示所有用户发布的信息，my 页面显示用户的头像昵称，在此页面用户可以进入选择学校页面 college，历史记录页面 history，收藏页面 collect，发布过的商品页面 posted，发布出售商品信息页面 post。用户在 home 页面可以进入商品的详细信息页面 detail，也可以查看发布者的个人信息 userinfo 页面。此处所有的页面均放置在 pages 文件夹下，并且每个页面都放在与页面同名的文件夹下。且文件夹下含有 components 文件夹放置页面自己的组件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 页面结构
├─components
├─pages
│  ├─collect
│  ├─college
│  ├─detail
│  ├─history
│  ├─home
│  ├─my
│  ├─post
│  ├─posted
│  └─user
├─store
├─style
├─App.vue
├─app.json
├─main.js
└─utils     // 放置工具函数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2><p>此项目的主要功能为用户发布商品信息，只有同校用户才能够看到。当用户未登陆时不能够发布信息，未选择学校时不能够看到本校的商品信息。用户能够对商品进行评论，点赞，收藏，转发，由于能力有限未能够实现程序内联系发布者的功能，只能够通过填写联系方式的形式来联系用户。<strong>由于个人开发者不能够发布上线含有发布功能的小程序，所有未能上线</strong>。因为本项目使用云开发完成所以不需要自己搭建服务器，数据库，域名等，可以直接在小程序页面操作云数据库，使用云存储保存用户上传的图片，使用云函数完成用户的登录等。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 直接在前端操作云数据库</span>
<span class="token comment">// 微信官方的接口</span>
<span class="token comment">// wx.cloud.database()就可以操作数据库了</span>
<span class="token keyword">async</span> <span class="token function">postTask</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> db <span class="token operator">=</span> wx<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token string">&#39;dybj-id&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;tasks&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>data<span class="token punctuation">,</span>
          <span class="token literal-property property">createTime</span><span class="token operator">:</span> db<span class="token punctuation">.</span><span class="token function">serverDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token comment">// 直接在前端使用云存储保存用户上传的图片</span>
<span class="token comment">// 通过 wx.cloud.uploadFile() 上传用户的图片</span>
<span class="token comment">// 注意一次只能够上传一张照片</span>
<span class="token keyword">async</span> <span class="token function">uploadImage</span><span class="token punctuation">(</span><span class="token parameter">tempFilePaths</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;上传图片中&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> fileID <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> openId <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;userInfo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>openid
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tempFilePaths<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tempFilePaths<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">await</span> wx<span class="token punctuation">.</span>cloud
            <span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">cloudPath</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>openId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
                tempFilePaths<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(\\w+)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
              <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
              <span class="token literal-property property">filePath</span><span class="token operator">:</span> tempFilePaths<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              fileID<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>fileID<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileID<span class="token punctuation">)</span>
        <span class="token keyword">return</span> fileID
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fileID
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token comment">// 直接在前端调用云函数</span>
<span class="token comment">// 通过 wx.cloud.callFunction() 调用云函数</span>
<span class="token comment">// 因为微信小程序不能够直接获取用户的openid</span>
<span class="token comment">// 所以只能够通过云函数获取用户的openid</span>
<span class="token keyword">async</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> userInfo <span class="token operator">=</span> e<span class="token punctuation">.</span>mp<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>userInfo
      <span class="token keyword">await</span> wx<span class="token punctuation">.</span>cloud
        <span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">$url</span><span class="token operator">:</span> <span class="token string">&#39;getUserOpenid&#39;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          userInfo<span class="token punctuation">.</span>_id <span class="token operator">=</span> res<span class="token punctuation">.</span>result
          userInfo<span class="token punctuation">.</span>openid <span class="token operator">=</span> res<span class="token punctuation">.</span>result
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setUserInfo</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postUserInfo</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="历史记录" tabindex="-1"><a class="header-anchor" href="#历史记录" aria-hidden="true">#</a> 历史记录</h3><p>借助 vuex 和微信小程序的提供的 API 接口（wx.setStorageSync）可以非常方便添加本地缓存。 基本过程</p><ol><li>用户点击卡片进入任务详情</li><li>任务加载完成，保存 taskinfo 并添加一个时间戳</li><li>判断这个 taskinfo 在不再 vuex 中，不在则添加到头部，在则将原来位置提到数组的第一位</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTaskById</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>task<span class="token punctuation">.</span>vistedTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> newHistory <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>task<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>_id <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>task<span class="token punctuation">.</span>_id<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setHistory</span><span class="token punctuation">(</span>newHistory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一次上传多张图片" tabindex="-1"><a class="header-anchor" href="#一次上传多张图片" aria-hidden="true">#</a> 一次上传多张图片</h3><p>由于小程序云开发的限制一次只能够上传一张图片，开始使用 for 循环但是总是时不时的出错，后使用 promise.all 解决问题。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">uploadImage</span><span class="token punctuation">(</span><span class="token parameter">fileList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> uploads <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          uploads<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> wx<span class="token punctuation">.</span>cloud
              <span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">cloudPath</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>openId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(\\w+)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                <span class="token literal-property property">filePath</span><span class="token operator">:</span> file
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>uploads<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下拉刷新和触底加载更多" tabindex="-1"><a class="header-anchor" href="#下拉刷新和触底加载更多" aria-hidden="true">#</a> 下拉刷新和触底加载更多</h3><p>借助小程序的钩子函数可以非常方便的实现这两个功能。<code>onPullDownRefresh</code> <code>onReachBottom</code>，在使用下拉刷新是要先在页面的 json 文件中先开启。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;enablePullDownRefresh&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 下拉刷新加载更多</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>more <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 触底加载更多</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="收获" tabindex="-1"><a class="header-anchor" href="#收获" aria-hidden="true">#</a> 收获</h2><p>微信小程序的云开发极大的方便了个人开发者，省去了好多繁琐的步骤，而且可以弹性收费，按量收费非常方便。 缺点：由于目前只有微信的小程序支持云开发，其他小程序并不支持微信小程序云开发。而且当数据量过大时性能不足。 通过此次完整的前后端项目的开发，使我更加深刻的理解了前端开发。</p><ol><li>开发前尽可能多的分析项目，不要盲目开始</li><li>开发时遇到小问题尽快解决，不要等到项目快结束时在去处理，那时任何一处的小改动都会影响到其他功能</li><li>深刻的理解了高内聚低耦合，尽可能多的去开发可复用、可移植的组件，尽量使一个模块完成一项功能，降低其与其他模块的耦合度</li><li>尽可能的细化项目的功能并列出表格，按照模块去开发设计实现这些功能。</li><li>尽量使用可复用的函数，不要每个功能都去创建一个单独的函数</li></ol>`,22);function m(b,h){const a=l("ExternalLinkIcon");return e(),o("div",null,[r,s("p",null,[n("在校期间好多平时买来后就没怎么使用，但是扔了可惜的东西。用闲鱼在网上交易运费又太高了。所以能不能开发一款校园内的二手交易平台呢。正好赶上最近小程序的大火。说干就干(遗憾的是未能够发布上线)。首先选择框架，原生框架开发太麻烦，平时主要使用 vue 开发。网上一搜发现了 "),s("a",k,[n("mpvue"),t(a)]),n(" 这个框架（不过现在好像已经停止更新了）。框架选好了既然要做一款程序还需要后端啊，正好小程序推出了"),s("a",d,[n("云开发"),t(a)]),n("。准备就绪，开搞。")]),c(" more "),v])}const g=p(u,[["render",m],["__file","微信小程序.html.vue"]]);export{g as default};
