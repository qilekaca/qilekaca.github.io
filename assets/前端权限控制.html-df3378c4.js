const n=JSON.parse('{"key":"v-09be564c","path":"/posts/texts/%E5%89%8D%E7%AB%AF%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.html","title":"前端权限控制","lang":"zh-CN","frontmatter":{"title":"前端权限控制","date":"2020-04-01T00:00:00.000Z","category":["前端"],"tag":["权限控制"],"description":"TODO 权限控制：侧边栏的展示、按钮级别的权限控制 axios 封装 import axios from \\"axios\\"; const instance = axios.create({ baseURL: \\"https://example.com/api/\\", timeout: 10000, // 10 seconds headers: { \\"Content-Type\\": \\"application/json\\", }, }); // 请求拦截器 instance.interceptors.request.use( (config) =&gt; { // 在请求发送之前对请求进行处理 // 可以在这里设置请求头等信息 return config; }, (error) =&gt; { // 发送请求失败时，对请求错误进行处理 return Promise.reject(error); } ); // 响应拦截器 instance.interceptors.response.use( (response) =&gt; { // 在响应接收之前对响应进行处理 // 可以在这里处理响应的数据 return response; }, (error) =&gt; { // 响应出错时，对响应错误进行处理 return Promise.reject(error); } ); const request = async (method, url, data) =&gt; { try { const response = await instance({ method, url, data, }); return response.data; } catch (error) { throw error.response ? error.response.data : error.message; } }; export default { get: (url) =&gt; request(\\"get\\", url), post: (url, data) =&gt; request(\\"post\\", url, data), put: (url, data) =&gt; request(\\"put\\", url, data), delete: (url) =&gt; request(\\"delete\\", url), };","head":[["meta",{"property":"og:url","content":"https://qilekaca.github.io/posts/texts/%E5%89%8D%E7%AB%AF%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"o_o"}],["meta",{"property":"og:title","content":"前端权限控制"}],["meta",{"property":"og:description","content":"TODO 权限控制：侧边栏的展示、按钮级别的权限控制 axios 封装 import axios from \\"axios\\"; const instance = axios.create({ baseURL: \\"https://example.com/api/\\", timeout: 10000, // 10 seconds headers: { \\"Content-Type\\": \\"application/json\\", }, }); // 请求拦截器 instance.interceptors.request.use( (config) =&gt; { // 在请求发送之前对请求进行处理 // 可以在这里设置请求头等信息 return config; }, (error) =&gt; { // 发送请求失败时，对请求错误进行处理 return Promise.reject(error); } ); // 响应拦截器 instance.interceptors.response.use( (response) =&gt; { // 在响应接收之前对响应进行处理 // 可以在这里处理响应的数据 return response; }, (error) =&gt; { // 响应出错时，对响应错误进行处理 return Promise.reject(error); } ); const request = async (method, url, data) =&gt; { try { const response = await instance({ method, url, data, }); return response.data; } catch (error) { throw error.response ? error.response.data : error.message; } }; export default { get: (url) =&gt; request(\\"get\\", url), post: (url, data) =&gt; request(\\"post\\", url, data), put: (url, data) =&gt; request(\\"put\\", url, data), delete: (url) =&gt; request(\\"delete\\", url), };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T14:55:47.000Z"}],["meta",{"property":"article:author","content":"ZhangWei"}],["meta",{"property":"article:tag","content":"权限控制"}],["meta",{"property":"article:published_time","content":"2020-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T14:55:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端权限控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-21T14:55:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZhangWei\\",\\"url\\":\\"https://github.com/qilekaca\\"}]}"]]},"headers":[{"level":2,"title":"TODO","slug":"todo","link":"#todo","children":[]},{"level":2,"title":"axios 封装","slug":"axios-封装","link":"#axios-封装","children":[]},{"level":2,"title":"axios 请求响应拦截器对比 vuerouter 的 beforeEach 和 afterEach","slug":"axios-请求响应拦截器对比-vuerouter-的-beforeeach-和-aftereach","link":"#axios-请求响应拦截器对比-vuerouter-的-beforeeach-和-aftereach","children":[]},{"level":2,"title":"vuerouter 实现按钮级别的权限控制","slug":"vuerouter-实现按钮级别的权限控制","link":"#vuerouter-实现按钮级别的权限控制","children":[]}],"git":{"createdTime":1737471347000,"updatedTime":1737471347000,"contributors":[{"name":"张伟","email":"37145794+qilekaca@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.13,"words":2138},"filePathRelative":"posts/texts/前端权限控制.md","localizedDate":"2020年4月1日","excerpt":"<h2> TODO</h2>\\n<ul>\\n<li><strong>权限控制</strong>：侧边栏的展示、按钮级别的权限控制</li>\\n</ul>\\n<h2> axios 封装</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> axios <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"axios\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> instance <span class=\\"token operator\\">=</span> axios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">baseURL</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://example.com/api/\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">timeout</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">10000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 10 seconds</span>\\n  <span class=\\"token literal-property property\\">headers</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string-property property\\">\\"Content-Type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"application/json\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 请求拦截器</span>\\ninstance<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">config</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 在请求发送之前对请求进行处理</span>\\n    <span class=\\"token comment\\">// 可以在这里设置请求头等信息</span>\\n    <span class=\\"token keyword\\">return</span> config<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 发送请求失败时，对请求错误进行处理</span>\\n    <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 响应拦截器</span>\\ninstance<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">response</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 在响应接收之前对响应进行处理</span>\\n    <span class=\\"token comment\\">// 可以在这里处理响应的数据</span>\\n    <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 响应出错时，对响应错误进行处理</span>\\n    <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">request</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">method<span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">,</span> data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">instance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n      method<span class=\\"token punctuation\\">,</span>\\n      url<span class=\\"token punctuation\\">,</span>\\n      data<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">throw</span> error<span class=\\"token punctuation\\">.</span>response <span class=\\"token operator\\">?</span> error<span class=\\"token punctuation\\">.</span>response<span class=\\"token punctuation\\">.</span>data <span class=\\"token operator\\">:</span> error<span class=\\"token punctuation\\">.</span>message<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function-variable function\\">get</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">url</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"get\\"</span><span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function-variable function\\">post</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">url<span class=\\"token punctuation\\">,</span> data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"post\\"</span><span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function-variable function\\">put</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">url<span class=\\"token punctuation\\">,</span> data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"put\\"</span><span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function-variable function\\">delete</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">url</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"delete\\"</span><span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
