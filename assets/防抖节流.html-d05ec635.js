const e=JSON.parse('{"key":"v-061e4cc8","path":"/posts/texts/%E9%98%B2%E6%8A%96%E8%8A%82%E6%B5%81.html","title":"防抖节流","lang":"zh-CN","frontmatter":{"title":"防抖节流","date":"2022-03-14T00:00:00.000Z","category":["前端"],"tag":["防抖节流"],"description":"防抖和节流是常见的用于优化 JavaScript 代码性能的技术。它们的作用是限制函数的执行频率，减少不必要的重复计算，提高网页的响应速度和用户体验。 防抖 网络卡顿时用户多次点击提交按钮可以使用防抖限制，当用户最后一次点击之后 500ms 之后进行提交 防抖的基本思想是：将多次高频率执行的函数，只执行一次。 具体实现方式是：设置一个定时器，在规定的时间内（如 300 毫秒）没有再次触发事件，才执行该函数。如果在规定时间内又触发了事件，则重新设置定时器，以此类推。","head":[["meta",{"property":"og:url","content":"https://qilekaca.github.io/posts/texts/%E9%98%B2%E6%8A%96%E8%8A%82%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"o_o"}],["meta",{"property":"og:title","content":"防抖节流"}],["meta",{"property":"og:description","content":"防抖和节流是常见的用于优化 JavaScript 代码性能的技术。它们的作用是限制函数的执行频率，减少不必要的重复计算，提高网页的响应速度和用户体验。 防抖 网络卡顿时用户多次点击提交按钮可以使用防抖限制，当用户最后一次点击之后 500ms 之后进行提交 防抖的基本思想是：将多次高频率执行的函数，只执行一次。 具体实现方式是：设置一个定时器，在规定的时间内（如 300 毫秒）没有再次触发事件，才执行该函数。如果在规定时间内又触发了事件，则重新设置定时器，以此类推。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T14:55:47.000Z"}],["meta",{"property":"article:author","content":"ZhangWei"}],["meta",{"property":"article:tag","content":"防抖节流"}],["meta",{"property":"article:published_time","content":"2022-03-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T14:55:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"防抖节流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-21T14:55:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZhangWei\\",\\"url\\":\\"https://github.com/qilekaca\\"}]}"]]},"headers":[{"level":2,"title":"防抖","slug":"防抖","link":"#防抖","children":[]},{"level":2,"title":"节流","slug":"节流","link":"#节流","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":2,"title":"防抖示例","slug":"防抖示例","link":"#防抖示例","children":[{"level":3,"title":"搜索输入框联想","slug":"搜索输入框联想","link":"#搜索输入框联想","children":[]},{"level":3,"title":"按钮连续点击","slug":"按钮连续点击","link":"#按钮连续点击","children":[]}]},{"level":2,"title":"节流示例","slug":"节流示例","link":"#节流示例","children":[{"level":3,"title":"页面滚动加载","slug":"页面滚动加载","link":"#页面滚动加载","children":[]}]},{"level":2,"title":"联合使用","slug":"联合使用","link":"#联合使用","children":[]}],"git":{"createdTime":1737471347000,"updatedTime":1737471347000,"contributors":[{"name":"张伟","email":"37145794+qilekaca@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.7,"words":1710},"filePathRelative":"posts/texts/防抖节流.md","localizedDate":"2022年3月14日","excerpt":"<p>防抖和节流是常见的用于优化 JavaScript 代码性能的技术。它们的作用是限制函数的执行频率，减少不必要的重复计算，提高网页的响应速度和用户体验。</p>\\n<h2> 防抖</h2>\\n<blockquote>\\n<p>网络卡顿时用户多次点击提交按钮可以使用防抖限制，当用户最后一次点击之后 500ms 之后进行提交</p>\\n</blockquote>\\n<p>防抖的基本思想是：将多次高频率执行的函数，只执行一次。</p>\\n<p>具体实现方式是：设置一个定时器，在规定的时间内（如 300 毫秒）没有再次触发事件，才执行该函数。如果在规定时间内又触发了事件，则重新设置定时器，以此类推。</p>\\n","autoDesc":true}');export{e as data};
